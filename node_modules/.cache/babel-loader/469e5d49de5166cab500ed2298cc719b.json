{"ast":null,"code":"import _objectSpread from \"/Users/Justgyro/github/react-apps/resort/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/Justgyro/github/react-apps/resort/src/Context.js\";\nimport React, { Component } from 'react';\nimport items from './data';\nconst RoomContext = React.createContext(); //RoomContext.Provider value={}\n\nclass RoomProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      rooms: [],\n      sortedRooms: [],\n      featuredRooms: [],\n      loading: true,\n      type: 'all',\n      capacity: 1,\n      price: 0,\n      minPrice: 0,\n      maxPrice: 0,\n      minSize: 0,\n      maxSize: 0,\n      breakfast: false,\n      pets: false\n    };\n\n    this.getRoom = slug => {\n      let tempRooms = [...this.state.rooms];\n      const room = tempRooms.find(room => room.slug === slug);\n      return room;\n    };\n\n    this.handleChange = event => {\n      const type = even.target.type;\n      const name = even.target.name;\n      const value = even.target.value;\n      console.log(type, name, value);\n    };\n\n    this.filterRooms = () => {\n      console.log(\"hello\");\n    };\n  }\n\n  //getData {}\n  componentDidMount() {\n    let rooms = this.formatData(items);\n    let featuredRooms = rooms.filter(room => room.featured === true);\n    let maxPrice = Math.max(...rooms.map(item => item.price));\n    let maxSize = Math.max(...rooms.map(item => item.size));\n    this.setState({\n      rooms,\n      featuredRooms,\n      sortedRooms: rooms,\n      loading: false,\n      price: maxPrice,\n      maxPrice,\n      maxSize\n    });\n  }\n\n  formatData(items) {\n    let tempItems = items.map(item => {\n      let id = item.sys.id;\n      let images = item.fields.images.map(image => image.fields.file.url);\n\n      let room = _objectSpread({}, item.fields, {\n        images,\n        id\n      });\n\n      return room;\n    });\n    return tempItems;\n  }\n\n  render() {\n    return React.createElement(RoomContext.Provider, {\n      value: _objectSpread({}, this.state, {\n        getRoom: this.getRoom,\n        handleChange: this.handleChange\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nconst RoomConsumer = RoomContext.Consumer;\nexport function withRoomConsumer(Component) {\n  return function ConsumerWrapper(props) {\n    return React.createElement(RoomConsumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, value => React.createElement(Component, Object.assign({}, props, {\n      context: value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })));\n  };\n}\nexport { RoomProvider, RoomConsumer, RoomContext };","map":{"version":3,"sources":["/Users/Justgyro/github/react-apps/resort/src/Context.js"],"names":["React","Component","items","RoomContext","createContext","RoomProvider","state","rooms","sortedRooms","featuredRooms","loading","type","capacity","price","minPrice","maxPrice","minSize","maxSize","breakfast","pets","getRoom","slug","tempRooms","room","find","handleChange","event","even","target","name","value","console","log","filterRooms","componentDidMount","formatData","filter","featured","Math","max","map","item","size","setState","tempItems","id","sys","images","fields","image","file","url","render","props","children","RoomConsumer","Consumer","withRoomConsumer","ConsumerWrapper"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport items from './data';\n\nconst RoomContext = React.createContext();\n//RoomContext.Provider value={}\nclass RoomProvider extends Component {\n  state={\n    rooms: [],\n    sortedRooms: [],\n    featuredRooms:[],\n    loading: true,\n    type: 'all',\n    capacity: 1,\n    price: 0,\n    minPrice: 0,\n    maxPrice: 0,\n    minSize: 0,\n    maxSize: 0,\n    breakfast: false,\n    pets: false\n  };\n\n  //getData {}\n\n  componentDidMount(){\n    let rooms = this.formatData(items)\n    let featuredRooms = rooms.filter(room => room.featured === true);\n    let maxPrice = Math.max(...rooms.map(item => item.price));\n    let maxSize = Math.max(...rooms.map(item => item.size));\n\n    this.setState({\n      rooms,\n      featuredRooms,\n      sortedRooms:rooms,\n      loading:false,\n      price: maxPrice,\n      maxPrice,\n      maxSize\n    })\n  }\n\n  formatData(items){\n    let tempItems = items.map(item => {\n      let id = item.sys.id\n      let images = item.fields.images.map(image => image.fields.file.url);\n\n      let room = {...item.fields,images,id}\n      return room;\n    });\n    return tempItems;\n  }\n\n  getRoom = slug => {\n    let tempRooms = [...this.state.rooms];\n    const room = tempRooms.find(room => room.slug === slug);\n    return room;\n  };\n\nhandleChange = event => {\n  const type = even.target.type\n  const name = even.target.name\n  const value = even.target.value\n  console.log(type,name,value);\n}\n\nfilterRooms = ()=> {\n  console.log(\"hello\")\n}\n  render() {\n    return (\n      <RoomContext.Provider value={{...this.state, getRoom: this.getRoom, handleChange: this.handleChange}}>\n        {this.props.children}\n      </RoomContext.Provider>\n\n    )\n  }\n}\n\nconst RoomConsumer = RoomContext.Consumer;\n\nexport function withRoomConsumer(Component) {\n  return function ConsumerWrapper(props) {\n    return (\n      <RoomConsumer>\n        {value => <Component {...props} context={value}/>}\n      </RoomConsumer>\n  )}\n}\n\nexport { RoomProvider, RoomConsumer, RoomContext }\n"]},"metadata":{},"sourceType":"module"}