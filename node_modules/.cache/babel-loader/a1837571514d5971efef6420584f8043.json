{"ast":null,"code":"import _objectSpread from \"/Users/Justgyro/github/react-apps/resort/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/Justgyro/github/react-apps/resort/src/Context.js\";\nimport React, { Component } from 'react';\nimport items from './data';\nimport Client from './Contentful';\nClient.getEntries().then(response => console.log(response.items));\nconst RoomContext = React.createContext(); //RoomContext.Provider value={}\n\nclass RoomProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      rooms: [],\n      sortedRooms: [],\n      featuredRooms: [],\n      loading: true,\n      type: 'all',\n      capacity: 1,\n      price: 0,\n      minPrice: 0,\n      maxPrice: 0,\n      minSize: 0,\n      maxSize: 0,\n      breakfast: false,\n      pets: false\n    };\n\n    this.getRoom = slug => {\n      let tempRooms = [...this.state.rooms];\n      const room = tempRooms.find(room => room.slug === slug);\n      return room;\n    };\n\n    this.handleChange = event => {\n      const target = event.target;\n      const value = target.type === 'checkbox' ? target.checked : target.value;\n      const name = event.target.name;\n      this.setState({\n        [name]: value\n      }, this.filterRooms);\n    };\n\n    this.filterRooms = () => {\n      let _this$state = this.state,\n          rooms = _this$state.rooms,\n          type = _this$state.type,\n          capacity = _this$state.capacity,\n          price = _this$state.price,\n          minSize = _this$state.minSize,\n          maxSize = _this$state.maxSize,\n          breakfast = _this$state.breakfast,\n          pets = _this$state.pets; // all the rooms\n\n      let tempRooms = [...rooms]; //transform values\n\n      capacity = parseInt(capacity);\n      price = parseInt(price); //filter by capacity\n\n      if (capacity !== 1) {\n        tempRooms = tempRooms.filter(room => room.capacity >= capacity);\n      } //filter by room type\n\n\n      if (type !== 'all') {\n        tempRooms = tempRooms.filter(room => room.type === type);\n      } //filter by price\n\n\n      tempRooms = tempRooms.filter(room => room.price <= price); // filter by size\n\n      tempRooms = tempRooms.filter(room => room.size >= minSize && room.size <= maxSize); //filer by breakfast\n\n      if (breakfast) {\n        tempRooms = tempRooms.filter(room => room.breakfast === true);\n      } //filer by pets\n\n\n      if (pets) {\n        tempRooms = tempRooms.filter(room => room.pets === true);\n      } // change state\n\n\n      this.setState({\n        sortedRooms: tempRooms\n      });\n    };\n  }\n\n  //getData {}\n  componentDidMount() {\n    let rooms = this.formatData(items);\n    let featuredRooms = rooms.filter(room => room.featured === true);\n    let maxPrice = Math.max(...rooms.map(item => item.price));\n    let maxSize = Math.max(...rooms.map(item => item.size));\n    this.setState({\n      rooms,\n      featuredRooms,\n      sortedRooms: rooms,\n      loading: false,\n      price: maxPrice,\n      maxPrice,\n      maxSize\n    });\n  }\n\n  formatData(items) {\n    let tempItems = items.map(item => {\n      let id = item.sys.id;\n      let images = item.fields.images.map(image => image.fields.file.url);\n\n      let room = _objectSpread({}, item.fields, {\n        images,\n        id\n      });\n\n      return room;\n    });\n    return tempItems;\n  }\n\n  render() {\n    return React.createElement(RoomContext.Provider, {\n      value: _objectSpread({}, this.state, {\n        getRoom: this.getRoom,\n        handleChange: this.handleChange\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nconst RoomConsumer = RoomContext.Consumer;\nexport function withRoomConsumer(Component) {\n  return function ConsumerWrapper(props) {\n    return React.createElement(RoomConsumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, value => React.createElement(Component, Object.assign({}, props, {\n      context: value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    })));\n  };\n}\nexport { RoomProvider, RoomConsumer, RoomContext };","map":{"version":3,"sources":["/Users/Justgyro/github/react-apps/resort/src/Context.js"],"names":["React","Component","items","Client","getEntries","then","response","console","log","RoomContext","createContext","RoomProvider","state","rooms","sortedRooms","featuredRooms","loading","type","capacity","price","minPrice","maxPrice","minSize","maxSize","breakfast","pets","getRoom","slug","tempRooms","room","find","handleChange","event","target","value","checked","name","setState","filterRooms","parseInt","filter","size","componentDidMount","formatData","featured","Math","max","map","item","tempItems","id","sys","images","fields","image","file","url","render","props","children","RoomConsumer","Consumer","withRoomConsumer","ConsumerWrapper"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,QAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEAA,MAAM,CAACC,UAAP,GAAoBC,IAApB,CAAyBC,QAAQ,IAAIC,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACJ,KAArB,CAArC;AAEA,MAAMO,WAAW,GAAGT,KAAK,CAACU,aAAN,EAApB,C,CACA;;AACA,MAAMC,YAAN,SAA2BV,SAA3B,CAAqC;AAAA;AAAA;AAAA,SACnCW,KADmC,GAC7B;AACJC,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,WAAW,EAAE,EAFT;AAGJC,MAAAA,aAAa,EAAC,EAHV;AAIJC,MAAAA,OAAO,EAAE,IAJL;AAKJC,MAAAA,IAAI,EAAE,KALF;AAMJC,MAAAA,QAAQ,EAAE,CANN;AAOJC,MAAAA,KAAK,EAAE,CAPH;AAQJC,MAAAA,QAAQ,EAAE,CARN;AASJC,MAAAA,QAAQ,EAAE,CATN;AAUJC,MAAAA,OAAO,EAAE,CAVL;AAWJC,MAAAA,OAAO,EAAE,CAXL;AAYJC,MAAAA,SAAS,EAAE,KAZP;AAaJC,MAAAA,IAAI,EAAE;AAbF,KAD6B;;AAAA,SA+CnCC,OA/CmC,GA+CzBC,IAAI,IAAI;AAChB,UAAIC,SAAS,GAAG,CAAC,GAAG,KAAKhB,KAAL,CAAWC,KAAf,CAAhB;AACA,YAAMgB,IAAI,GAAGD,SAAS,CAACE,IAAV,CAAeD,IAAI,IAAIA,IAAI,CAACF,IAAL,KAAcA,IAArC,CAAb;AACA,aAAOE,IAAP;AACD,KAnDkC;;AAAA,SAqDrCE,YArDqC,GAqDtBC,KAAK,IAAI;AACtB,YAAMC,MAAM,GAAGD,KAAK,CAACC,MAArB;AACA,YAAMC,KAAK,GAAGD,MAAM,CAAChB,IAAP,KAAgB,UAAhB,GAA6BgB,MAAM,CAACE,OAApC,GAA8CF,MAAM,CAACC,KAAnE;AACA,YAAME,IAAI,GAAGJ,KAAK,CAACC,MAAN,CAAaG,IAA1B;AACA,WAAKC,QAAL,CAAc;AACZ,SAACD,IAAD,GAAQF;AADI,OAAd,EAEG,KAAKI,WAFR;AAGD,KA5DoC;;AAAA,SA8DrCA,WA9DqC,GA8DvB,MAAK;AAAA,wBAGb,KAAK1B,KAHQ;AAAA,UAEfC,KAFe,eAEfA,KAFe;AAAA,UAERI,IAFQ,eAERA,IAFQ;AAAA,UAEFC,QAFE,eAEFA,QAFE;AAAA,UAEQC,KAFR,eAEQA,KAFR;AAAA,UAEeG,OAFf,eAEeA,OAFf;AAAA,UAEwBC,OAFxB,eAEwBA,OAFxB;AAAA,UAEiCC,SAFjC,eAEiCA,SAFjC;AAAA,UAE4CC,IAF5C,eAE4CA,IAF5C,EAIjB;;AACA,UAAIG,SAAS,GAAG,CAAC,GAAGf,KAAJ,CAAhB,CALiB,CAOjB;;AACFK,MAAAA,QAAQ,GAAGqB,QAAQ,CAACrB,QAAD,CAAnB;AACAC,MAAAA,KAAK,GAAGoB,QAAQ,CAACpB,KAAD,CAAhB,CATmB,CAWnB;;AACE,UAAID,QAAQ,KAAK,CAAjB,EAAmB;AACjBU,QAAAA,SAAS,GAAGA,SAAS,CAACY,MAAV,CAAiBX,IAAI,IAAIA,IAAI,CAACX,QAAL,IAAiBA,QAA1C,CAAZ;AACD,OAdgB,CAejB;;;AACA,UAAGD,IAAI,KAAK,KAAZ,EAAkB;AAChBW,QAAAA,SAAS,GAAGA,SAAS,CAACY,MAAV,CAAiBX,IAAI,IAAIA,IAAI,CAACZ,IAAL,KAAcA,IAAvC,CAAZ;AACD,OAlBgB,CAmBjB;;;AACFW,MAAAA,SAAS,GAAGA,SAAS,CAACY,MAAV,CAAiBX,IAAI,IAAIA,IAAI,CAACV,KAAL,IAAcA,KAAvC,CAAZ,CApBmB,CAqBnB;;AACAS,MAAAA,SAAS,GAAGA,SAAS,CAACY,MAAV,CAAiBX,IAAI,IAAIA,IAAI,CAACY,IAAL,IAAanB,OAAb,IAAwBO,IAAI,CAACY,IAAL,IAAalB,OAA9D,CAAZ,CAtBmB,CAuBnB;;AACA,UAAGC,SAAH,EAAa;AACXI,QAAAA,SAAS,GAAGA,SAAS,CAACY,MAAV,CAAiBX,IAAI,IAAIA,IAAI,CAACL,SAAL,KAAmB,IAA5C,CAAZ;AACD,OA1BkB,CA4BnB;;;AACA,UAAGC,IAAH,EAAQ;AACNG,QAAAA,SAAS,GAAGA,SAAS,CAACY,MAAV,CAAiBX,IAAI,IAAIA,IAAI,CAACJ,IAAL,KAAc,IAAvC,CAAZ;AACD,OA/BkB,CAiCjB;;;AACA,WAAKY,QAAL,CAAc;AACZvB,QAAAA,WAAW,EAAEc;AADD,OAAd;AAGD,KAnGoC;AAAA;;AAiBnC;AAEAc,EAAAA,iBAAiB,GAAE;AACjB,QAAI7B,KAAK,GAAG,KAAK8B,UAAL,CAAgBzC,KAAhB,CAAZ;AACA,QAAIa,aAAa,GAAGF,KAAK,CAAC2B,MAAN,CAAaX,IAAI,IAAIA,IAAI,CAACe,QAAL,KAAkB,IAAvC,CAApB;AACA,QAAIvB,QAAQ,GAAGwB,IAAI,CAACC,GAAL,CAAS,GAAGjC,KAAK,CAACkC,GAAN,CAAUC,IAAI,IAAIA,IAAI,CAAC7B,KAAvB,CAAZ,CAAf;AACA,QAAII,OAAO,GAAGsB,IAAI,CAACC,GAAL,CAAS,GAAGjC,KAAK,CAACkC,GAAN,CAAUC,IAAI,IAAIA,IAAI,CAACP,IAAvB,CAAZ,CAAd;AAEA,SAAKJ,QAAL,CAAc;AACZxB,MAAAA,KADY;AAEZE,MAAAA,aAFY;AAGZD,MAAAA,WAAW,EAACD,KAHA;AAIZG,MAAAA,OAAO,EAAC,KAJI;AAKZG,MAAAA,KAAK,EAAEE,QALK;AAMZA,MAAAA,QANY;AAOZE,MAAAA;AAPY,KAAd;AASD;;AAEDoB,EAAAA,UAAU,CAACzC,KAAD,EAAO;AACf,QAAI+C,SAAS,GAAG/C,KAAK,CAAC6C,GAAN,CAAUC,IAAI,IAAI;AAChC,UAAIE,EAAE,GAAGF,IAAI,CAACG,GAAL,CAASD,EAAlB;AACA,UAAIE,MAAM,GAAGJ,IAAI,CAACK,MAAL,CAAYD,MAAZ,CAAmBL,GAAnB,CAAuBO,KAAK,IAAIA,KAAK,CAACD,MAAN,CAAaE,IAAb,CAAkBC,GAAlD,CAAb;;AAEA,UAAI3B,IAAI,qBAAOmB,IAAI,CAACK,MAAZ;AAAmBD,QAAAA,MAAnB;AAA0BF,QAAAA;AAA1B,QAAR;;AACA,aAAOrB,IAAP;AACD,KANe,CAAhB;AAOA,WAAOoB,SAAP;AACD;;AAuDDQ,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,oBAAM,KAAK7C,KAAX;AAAkBc,QAAAA,OAAO,EAAE,KAAKA,OAAhC;AAAyCK,QAAAA,YAAY,EAAE,KAAKA;AAA5D,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAK2B,KAAL,CAAWC,QADd,CADF;AAMD;;AA3GkC;;AA8GrC,MAAMC,YAAY,GAAGnD,WAAW,CAACoD,QAAjC;AAEA,OAAO,SAASC,gBAAT,CAA0B7D,SAA1B,EAAqC;AAC1C,SAAO,SAAS8D,eAAT,CAAyBL,KAAzB,EAAgC;AACrC,WACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGxB,KAAK,IAAI,oBAAC,SAAD,oBAAewB,KAAf;AAAsB,MAAA,OAAO,EAAExB,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADZ,CADF;AAIA,GALF;AAMD;AAED,SAASvB,YAAT,EAAuBiD,YAAvB,EAAqCnD,WAArC","sourcesContent":["import React, { Component } from 'react';\nimport items from './data';\nimport Client from './Contentful';\n\nClient.getEntries().then(response => console.log(response.items))\n\nconst RoomContext = React.createContext();\n//RoomContext.Provider value={}\nclass RoomProvider extends Component {\n  state={\n    rooms: [],\n    sortedRooms: [],\n    featuredRooms:[],\n    loading: true,\n    type: 'all',\n    capacity: 1,\n    price: 0,\n    minPrice: 0,\n    maxPrice: 0,\n    minSize: 0,\n    maxSize: 0,\n    breakfast: false,\n    pets: false\n  };\n\n  //getData {}\n\n  componentDidMount(){\n    let rooms = this.formatData(items)\n    let featuredRooms = rooms.filter(room => room.featured === true);\n    let maxPrice = Math.max(...rooms.map(item => item.price));\n    let maxSize = Math.max(...rooms.map(item => item.size));\n\n    this.setState({\n      rooms,\n      featuredRooms,\n      sortedRooms:rooms,\n      loading:false,\n      price: maxPrice,\n      maxPrice,\n      maxSize\n    })\n  }\n\n  formatData(items){\n    let tempItems = items.map(item => {\n      let id = item.sys.id\n      let images = item.fields.images.map(image => image.fields.file.url);\n\n      let room = {...item.fields,images,id}\n      return room;\n    });\n    return tempItems;\n  }\n\n  getRoom = slug => {\n    let tempRooms = [...this.state.rooms];\n    const room = tempRooms.find(room => room.slug === slug);\n    return room;\n  };\n\nhandleChange = event => {\n  const target = event.target;\n  const value = target.type === 'checkbox' ? target.checked : target.value\n  const name = event.target.name;\n  this.setState({\n    [name]: value\n  }, this.filterRooms)\n}\n\nfilterRooms = ()=> {\n  let {\n    rooms, type, capacity, price, minSize, maxSize, breakfast, pets\n  } = this.state\n  // all the rooms\n  let tempRooms = [...rooms];\n\n  //transform values\ncapacity = parseInt(capacity)\nprice = parseInt(price)\n\n//filter by capacity\n  if (capacity !== 1){\n    tempRooms = tempRooms.filter(room => room.capacity >= capacity)\n  }\n  //filter by room type\n  if(type !== 'all'){\n    tempRooms = tempRooms.filter(room => room.type === type)\n  }\n  //filter by price\ntempRooms = tempRooms.filter(room => room.price <= price);\n// filter by size\ntempRooms = tempRooms.filter(room => room.size >= minSize && room.size <= maxSize)\n//filer by breakfast\nif(breakfast){\n  tempRooms = tempRooms.filter(room => room.breakfast === true)\n}\n\n//filer by pets\nif(pets){\n  tempRooms = tempRooms.filter(room => room.pets === true)\n}\n\n  // change state\n  this.setState({\n    sortedRooms: tempRooms\n  })\n}\n  render() {\n    return (\n      <RoomContext.Provider value={{...this.state, getRoom: this.getRoom, handleChange: this.handleChange}}>\n        {this.props.children}\n      </RoomContext.Provider>\n\n    )\n  }\n}\n\nconst RoomConsumer = RoomContext.Consumer;\n\nexport function withRoomConsumer(Component) {\n  return function ConsumerWrapper(props) {\n    return (\n      <RoomConsumer>\n        {value => <Component {...props} context={value}/>}\n      </RoomConsumer>\n  )}\n}\n\nexport { RoomProvider, RoomConsumer, RoomContext }\n"]},"metadata":{},"sourceType":"module"}